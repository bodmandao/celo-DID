{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "name": "IdentityCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "IdentityDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "IdentityRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAge",
          "type": "uint256"
        }
      ],
      "name": "IdentityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "IdentityVerified",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "name": "createIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllIdentities",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revoked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "internalType": "struct DecentralizedIdentity.Identity[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "identities",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "revoked",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "identitiesByIndex",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "identityCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "identityOwner",
          "type": "address"
        }
      ],
      "name": "revokeIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "newAge",
          "type": "uint256"
        }
      ],
      "name": "updateIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifyIdentity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd9e7f181d4f8588f2c9db1be0ca861b410f3d9ca1b75d032055d2c3efc9e5dce",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1842121",
    "logsBloom": "0x
    "blockHash": "0xccba504ec5bc4114ff534e734f792c952d879d3a19fddbba75a781af46f68684",
    "transactionHash": "0xd9e7f181d4f8588f2c9db1be0ca861b410f3d9ca1b75d032055d2c3efc9e5dce",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1842121",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c4f7333d0aa8679e62d62c277ec6859c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"IdentityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"IdentityDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"IdentityRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAge\",\"type\":\"uint256\"}],\"name\":\"IdentityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"IdentityVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"createIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllIdentities\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct DecentralizedIdentity.Identity[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"identities\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"identitiesByIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identityCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"identityOwner\",\"type\":\"address\"}],\"name\":\"revokeIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"newAge\",\"type\":\"uint256\"}],\"name\":\"updateIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifyIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createIdentity(string,uint256)\":{\"details\":\"Function to create a new identity\",\"params\":{\"age\":\"The age of the identity\",\"name\":\"The name of the identity\"}},\"deleteIdentity()\":{\"details\":\"Function to delete an identity\"},\"getAllIdentities()\":{\"details\":\"Function to get details of all identities\",\"returns\":{\"_0\":\"An array of Identity structs representing all identities\"}},\"revokeIdentity(address)\":{\"details\":\"Function to revoke an identity\"},\"updateIdentity(string,uint256)\":{\"details\":\"Function to update an identity\",\"params\":{\"newAge\":\"The new age of the identity\",\"newName\":\"The new name of the identity\"}},\"verifyIdentity()\":{\"details\":\"Function to verify an identity\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Did.sol\":\"DecentralizedIdentity\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Did.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract DecentralizedIdentity {\\n    // Struct to represent an identity\\n    struct Identity {\\n        string name;\\n        uint age;\\n        bool exists;\\n        bool verified;\\n        bool revoked;\\n        address owner;\\n    }\\n\\n    // Mapping to store identity details by address\\n    mapping(address => Identity) public identities;\\n\\n    // Mapping to store addresses of identities by index\\n    mapping(uint => address) public identitiesByIndex;\\n\\n    // Counter to keep track of the number of identities\\n    uint public identityCount;\\n\\n    // Events to log identity-related actions\\n    event IdentityCreated(address indexed owner, string name, uint age);\\n    event IdentityUpdated(address indexed owner, string newName, uint newAge);\\n    event IdentityVerified(address indexed owner);\\n    event IdentityRevoked(address indexed owner);\\n    event IdentityDeleted(address indexed owner);\\n\\n    /**\\n     * @dev Modifier to ensure that the caller is the owner of the identity\\n     */\\n    modifier onlyIdentityOwner() {\\n        require(identities[msg.sender].exists, \\\"Identity does not exist\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to ensure that the caller is a verified identity\\n     */\\n    modifier onlyVerifier() {\\n        require(identities[msg.sender].exists && identities[msg.sender].verified, \\\"Not a verified identity\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to ensure that the caller is a verified identity eligible to revoke another identity\\n     * @param identityOwner The address of the identity to be revoked\\n     */\\n    modifier onlyRevoker(address identityOwner) {\\n        require(identities[msg.sender].exists && identities[msg.sender].verified, \\\"Not a verified identity\\\");\\n        require(identities[identityOwner].exists && !identities[identityOwner].revoked, \\\"Identity not valid for revocation\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to ensure that the caller is a verified identity eligible to delete another identity\\n     * @param identityOwner The address of the identity to be deleted\\n     */\\n    modifier onlyDeleter(address identityOwner) {\\n        require(identities[msg.sender].exists && identities[msg.sender].verified, \\\"Not a verified identity\\\");\\n        require(identities[identityOwner].exists, \\\"Identity not valid for deletion\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Function to create a new identity\\n     * @param name The name of the identity\\n     * @param age The age of the identity\\n     */\\n    function createIdentity(string memory name, uint age) external {\\n        require(!identities[msg.sender].exists, \\\"Identity already exists\\\");\\n        require(bytes(name).length > 0, \\\"Name cannot be empty\\\");\\n\\n        identities[msg.sender] = Identity(name, age, true, false, false,msg.sender);\\n        identitiesByIndex[identityCount + 1] = msg.sender;\\n        identityCount++;\\n\\n        emit IdentityCreated(msg.sender, name, age);\\n    }\\n\\n    /**\\n     * @dev Function to update an identity\\n     * @param newName The new name of the identity\\n     * @param newAge The new age of the identity\\n     */\\n    function updateIdentity(string memory newName, uint newAge) external onlyIdentityOwner {\\n        require(bytes(newName).length > 0, \\\"Name cannot be empty\\\");\\n\\n        identities[msg.sender].name = newName;\\n        identities[msg.sender].age = newAge;\\n\\n        emit IdentityUpdated(msg.sender, newName, newAge);\\n    }\\n\\n    /**\\n     * @dev Function to verify an identity\\n     */\\n    function verifyIdentity() external {\\n        require(!identities[msg.sender].verified, \\\"Identity already verified\\\");\\n\\n        identities[msg.sender].verified = true;\\n\\n        emit IdentityVerified(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Function to revoke an identity\\n     */\\n    function revokeIdentity(address identityOwner) external onlyRevoker(identityOwner) {\\n        identities[identityOwner].revoked = true;\\n\\n        emit IdentityRevoked(identityOwner);\\n    }\\n\\n    /**\\n * @dev Function to delete an identity\\n */\\nfunction deleteIdentity() external onlyDeleter(msg.sender) {\\n    // Save the index of the identity to be deleted\\n    uint indexToDelete = 0;\\n    for (uint i = 1; i <= identityCount; i++) {\\n        if (identitiesByIndex[i] == msg.sender) {\\n            indexToDelete = i;\\n            break;\\n        }\\n    }\\n\\n    // Ensure the identity is found in the mapping\\n    require(indexToDelete != 0, \\\"Identity not found\\\");\\n\\n    // Move the last element to the position of the element to be deleted\\n    address lastIdentity = identitiesByIndex[identityCount];\\n    identitiesByIndex[indexToDelete] = lastIdentity;\\n\\n    // Update the index of the moved identity\\n    identitiesByIndex[identityCount] = address(0);\\n\\n    // Delete the identity\\n    delete identities[msg.sender];\\n\\n    // Decrement the identityCount\\n    identityCount--;\\n\\n    emit IdentityDeleted(msg.sender);\\n}\\n\\n\\n    /**\\n     * @dev Function to get details of all identities\\n     * @return An array of Identity structs representing all identities\\n     */\\n    function getAllIdentities() external view returns (Identity[] memory) {\\n        Identity[] memory allIdentities = new Identity[](identityCount);\\n\\n        for (uint i = 1; i <= identityCount; i++) {\\n            address identityOwner = identitiesByIndex[i];\\n            allIdentities[i - 1] = identities[identityOwner];\\n        }\\n\\n        return allIdentities;\\n    }\\n}\\n\",\"keccak256\":\"0x9ee483d10c71e4ffcc34d61b50039a3d32012e1e8f9bf09e3ec7e7f19273bbd4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612079806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637eeede35116100665780637eeede351461011e5780639ce7874b1461013c578063bc14e45714610146578063e8731c3214610162578063f653b81e1461016c57610093565b80630ebddd17146100985780632881ad6e146100b457806338678ba5146100e457806359b9248c14610102575b600080fd5b6100b260048036038101906100ad919061130c565b6101a1565b005b6100ce60048036038101906100c9919061136f565b61040e565b6040516100db91906113ab565b60405180910390f35b6100ec610441565b6040516100f991906113d5565b60405180910390f35b61011c60048036038101906101179190611536565b610447565b005b610126610602565b6040516101339190611795565b60405180910390f35b610144610878565b005b610160600480360381019061015b9190611536565b610cbf565b005b61016a610fb2565b005b6101866004803603810190610181919061130c565b6110e0565b60405161019896959493929190611810565b60405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561024857506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff165b610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906118c4565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561032e57506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160029054906101000a900460ff16155b61036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490611956565b60405180910390fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160026101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fccf550e579fbeb7d56da9a0175f8d4526535cab139e73b592516f1916d4075dd60405160405180910390a25050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc906119c2565b60405180910390fd5b6000825111610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051090611a2e565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190816105679190611c5a565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167ff766cba52472f168bac76b83b02493bdd09c6e1462599e934b7ecead5950d1d983836040516105f6929190611d2c565b60405180910390a25050565b6060600060025467ffffffffffffffff8111156106225761062161140b565b5b60405190808252806020026020018201604052801561065b57816020015b6106486111eb565b8152602001906001900390816106405790505b5090506000600190505b60025481116108705760006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820180546106ff90611a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461072b90611a7d565b80156107785780601f1061074d57610100808354040283529160200191610778565b820191906000526020600020905b81548152906001019060200180831161075b57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581526020016002820160029054906101000a900460ff161515151581526020016002820160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050836001846108409190611d8b565b8151811061085157610850611dbf565b5b602002602001018190525050808061086890611dee565b915050610665565b508091505090565b336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561091f57506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff165b61095e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610955906118c4565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e390611e82565b60405180910390fd5b600080600190505b6002548111610a7e573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a6b57809150610a7e565b8080610a7690611dee565b9150506109f4565b5060008103610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab990611eee565b60405180910390fd5b600060016000600254815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060016000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610bf2919061123d565b60018201600090556002820160006101000a81549060ff02191690556002820160016101000a81549060ff02191690556002820160026101000a81549060ff02191690556002820160036101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505060026000815480929190610c7290611f0e565b91905055503373ffffffffffffffffffffffffffffffffffffffff167fc24bb9f4ebb7a8b8d37e375af6ac3f7e39d0218d2042bbd057d783048a904cd860405160405180910390a2505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610d4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4590611f83565b60405180910390fd5b6000825111610d92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8990611a2e565b60405180910390fd5b6040518060c001604052808381526020018281526020016001151581526020016000151581526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610e319190611c5a565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff02191690831515021790555060808201518160020160026101000a81548160ff02191690831515021790555060a08201518160020160036101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505033600160006001600254610efa9190611fa3565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060026000815480929190610f5990611dee565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f06bd209378e3df7a1561fcbdedeedd0d917023f6c33733a7320a02f1c84a62e78383604051610fa6929190611d2c565b60405180910390a25050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff1615611041576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103890612023565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160016101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f02f93fdaafad8edad1ca75101b1fbda62e64ab9afc26d0ea801ccf6ef02c09ab60405160405180910390a2565b600060205280600052604060002060009150905080600001805461110390611a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461112f90611a7d565b801561117c5780601f106111515761010080835404028352916020019161117c565b820191906000526020600020905b81548152906001019060200180831161115f57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16908060020160029054906101000a900460ff16908060020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6040518060c001604052806060815260200160008152602001600015158152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b50805461124990611a7d565b6000825580601f1061125b575061127a565b601f016020900490600052602060002090810190611279919061127d565b5b50565b5b8082111561129657600081600090555060010161127e565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112d9826112ae565b9050919050565b6112e9816112ce565b81146112f457600080fd5b50565b600081359050611306816112e0565b92915050565b600060208284031215611322576113216112a4565b5b6000611330848285016112f7565b91505092915050565b6000819050919050565b61134c81611339565b811461135757600080fd5b50565b60008135905061136981611343565b92915050565b600060208284031215611385576113846112a4565b5b60006113938482850161135a565b91505092915050565b6113a5816112ce565b82525050565b60006020820190506113c0600083018461139c565b92915050565b6113cf81611339565b82525050565b60006020820190506113ea60008301846113c6565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611443826113fa565b810181811067ffffffffffffffff821117156114625761146161140b565b5b80604052505050565b600061147561129a565b9050611481828261143a565b919050565b600067ffffffffffffffff8211156114a1576114a061140b565b5b6114aa826113fa565b9050602081019050919050565b82818337600083830152505050565b60006114d96114d484611486565b61146b565b9050828152602081018484840111156114f5576114f46113f5565b5b6115008482856114b7565b509392505050565b600082601f83011261151d5761151c6113f0565b5b813561152d8482602086016114c6565b91505092915050565b6000806040838503121561154d5761154c6112a4565b5b600083013567ffffffffffffffff81111561156b5761156a6112a9565b5b61157785828601611508565b92505060206115888582860161135a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115f85780820151818401526020810190506115dd565b60008484015250505050565b600061160f826115be565b61161981856115c9565b93506116298185602086016115da565b611632816113fa565b840191505092915050565b61164681611339565b82525050565b60008115159050919050565b6116618161164c565b82525050565b611670816112ce565b82525050565b600060c08301600083015184820360008601526116938282611604565b91505060208301516116a8602086018261163d565b5060408301516116bb6040860182611658565b5060608301516116ce6060860182611658565b5060808301516116e16080860182611658565b5060a08301516116f460a0860182611667565b508091505092915050565b600061170b8383611676565b905092915050565b6000602082019050919050565b600061172b82611592565b611735818561159d565b935083602082028501611747856115ae565b8060005b85811015611783578484038952815161176485826116ff565b945061176f83611713565b925060208a0199505060018101905061174b565b50829750879550505050505092915050565b600060208201905081810360008301526117af8184611720565b905092915050565b600082825260208201905092915050565b60006117d3826115be565b6117dd81856117b7565b93506117ed8185602086016115da565b6117f6816113fa565b840191505092915050565b61180a8161164c565b82525050565b600060c082019050818103600083015261182a81896117c8565b905061183960208301886113c6565b6118466040830187611801565b6118536060830186611801565b6118606080830185611801565b61186d60a083018461139c565b979650505050505050565b7f4e6f742061207665726966696564206964656e74697479000000000000000000600082015250565b60006118ae6017836117b7565b91506118b982611878565b602082019050919050565b600060208201905081810360008301526118dd816118a1565b9050919050565b7f4964656e74697479206e6f742076616c696420666f72207265766f636174696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006119406021836117b7565b915061194b826118e4565b604082019050919050565b6000602082019050818103600083015261196f81611933565b9050919050565b7f4964656e7469747920646f6573206e6f74206578697374000000000000000000600082015250565b60006119ac6017836117b7565b91506119b782611976565b602082019050919050565b600060208201905081810360008301526119db8161199f565b9050919050565b7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000600082015250565b6000611a186014836117b7565b9150611a23826119e2565b602082019050919050565b60006020820190508181036000830152611a4781611a0b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a9557607f821691505b602082108103611aa857611aa7611a4e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611b107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ad3565b611b1a8683611ad3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611b57611b52611b4d84611339565b611b32565b611339565b9050919050565b6000819050919050565b611b7183611b3c565b611b85611b7d82611b5e565b848454611ae0565b825550505050565b600090565b611b9a611b8d565b611ba5818484611b68565b505050565b5b81811015611bc957611bbe600082611b92565b600181019050611bab565b5050565b601f821115611c0e57611bdf81611aae565b611be884611ac3565b81016020851015611bf7578190505b611c0b611c0385611ac3565b830182611baa565b50505b505050565b600082821c905092915050565b6000611c3160001984600802611c13565b1980831691505092915050565b6000611c4a8383611c20565b9150826002028217905092915050565b611c63826115be565b67ffffffffffffffff811115611c7c57611c7b61140b565b5b611c868254611a7d565b611c91828285611bcd565b600060209050601f831160018114611cc45760008415611cb2578287015190505b611cbc8582611c3e565b865550611d24565b601f198416611cd286611aae565b60005b82811015611cfa57848901518255600182019150602085019450602081019050611cd5565b86831015611d175784890151611d13601f891682611c20565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152611d4681856117c8565b9050611d5560208301846113c6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d9682611339565b9150611da183611339565b9250828203905081811115611db957611db8611d5c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611df982611339565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e2b57611e2a611d5c565b5b600182019050919050565b7f4964656e74697479206e6f742076616c696420666f722064656c6574696f6e00600082015250565b6000611e6c601f836117b7565b9150611e7782611e36565b602082019050919050565b60006020820190508181036000830152611e9b81611e5f565b9050919050565b7f4964656e74697479206e6f7420666f756e640000000000000000000000000000600082015250565b6000611ed86012836117b7565b9150611ee382611ea2565b602082019050919050565b60006020820190508181036000830152611f0781611ecb565b9050919050565b6000611f1982611339565b915060008203611f2c57611f2b611d5c565b5b600182039050919050565b7f4964656e7469747920616c726561647920657869737473000000000000000000600082015250565b6000611f6d6017836117b7565b9150611f7882611f37565b602082019050919050565b60006020820190508181036000830152611f9c81611f60565b9050919050565b6000611fae82611339565b9150611fb983611339565b9250828201905080821115611fd157611fd0611d5c565b5b92915050565b7f4964656e7469747920616c726561647920766572696669656400000000000000600082015250565b600061200d6019836117b7565b915061201882611fd7565b602082019050919050565b6000602082019050818103600083015261203c81612000565b905091905056fea26469706673582212209f14048c9efa9ac8aa0bb768800e2123e5e622c6ec4439443a1d9009165cf7ba64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80637eeede35116100665780637eeede351461011e5780639ce7874b1461013c578063bc14e45714610146578063e8731c3214610162578063f653b81e1461016c57610093565b80630ebddd17146100985780632881ad6e146100b457806338678ba5146100e457806359b9248c14610102575b600080fd5b6100b260048036038101906100ad919061130c565b6101a1565b005b6100ce60048036038101906100c9919061136f565b61040e565b6040516100db91906113ab565b60405180910390f35b6100ec610441565b6040516100f991906113d5565b60405180910390f35b61011c60048036038101906101179190611536565b610447565b005b610126610602565b6040516101339190611795565b60405180910390f35b610144610878565b005b610160600480360381019061015b9190611536565b610cbf565b005b61016a610fb2565b005b6101866004803603810190610181919061130c565b6110e0565b60405161019896959493929190611810565b60405180910390f35b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561024857506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff165b610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e906118c4565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561032e57506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160029054906101000a900460ff16155b61036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490611956565b60405180910390fd5b60016000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160026101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fccf550e579fbeb7d56da9a0175f8d4526535cab139e73b592516f1916d4075dd60405160405180910390a25050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc906119c2565b60405180910390fd5b6000825111610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051090611a2e565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190816105679190611c5a565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167ff766cba52472f168bac76b83b02493bdd09c6e1462599e934b7ecead5950d1d983836040516105f6929190611d2c565b60405180910390a25050565b6060600060025467ffffffffffffffff8111156106225761062161140b565b5b60405190808252806020026020018201604052801561065b57816020015b6106486111eb565b8152602001906001900390816106405790505b5090506000600190505b60025481116108705760006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820180546106ff90611a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461072b90611a7d565b80156107785780601f1061074d57610100808354040283529160200191610778565b820191906000526020600020905b81548152906001019060200180831161075b57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff161515151581526020016002820160029054906101000a900460ff161515151581526020016002820160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050836001846108409190611d8b565b8151811061085157610850611dbf565b5b602002602001018190525050808061086890611dee565b915050610665565b508091505090565b336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16801561091f57506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff165b61095e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610955906118c4565b60405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166109ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e390611e82565b60405180910390fd5b600080600190505b6002548111610a7e573373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a6b57809150610a7e565b8080610a7690611dee565b9150506109f4565b5060008103610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab990611eee565b60405180910390fd5b600060016000600254815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060016000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610bf2919061123d565b60018201600090556002820160006101000a81549060ff02191690556002820160016101000a81549060ff02191690556002820160026101000a81549060ff02191690556002820160036101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505060026000815480929190610c7290611f0e565b91905055503373ffffffffffffffffffffffffffffffffffffffff167fc24bb9f4ebb7a8b8d37e375af6ac3f7e39d0218d2042bbd057d783048a904cd860405160405180910390a2505050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610d4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4590611f83565b60405180910390fd5b6000825111610d92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8990611a2e565b60405180910390fd5b6040518060c001604052808381526020018281526020016001151581526020016000151581526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610e319190611c5a565b506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548160ff02191690831515021790555060808201518160020160026101000a81548160ff02191690831515021790555060a08201518160020160036101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505033600160006001600254610efa9190611fa3565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060026000815480929190610f5990611dee565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f06bd209378e3df7a1561fcbdedeedd0d917023f6c33733a7320a02f1c84a62e78383604051610fa6929190611d2c565b60405180910390a25050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff1615611041576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103890612023565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160016101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f02f93fdaafad8edad1ca75101b1fbda62e64ab9afc26d0ea801ccf6ef02c09ab60405160405180910390a2565b600060205280600052604060002060009150905080600001805461110390611a7d565b80601f016020809104026020016040519081016040528092919081815260200182805461112f90611a7d565b801561117c5780601f106111515761010080835404028352916020019161117c565b820191906000526020600020905b81548152906001019060200180831161115f57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16908060020160029054906101000a900460ff16908060020160039054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b6040518060c001604052806060815260200160008152602001600015158152602001600015158152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b50805461124990611a7d565b6000825580601f1061125b575061127a565b601f016020900490600052602060002090810190611279919061127d565b5b50565b5b8082111561129657600081600090555060010161127e565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112d9826112ae565b9050919050565b6112e9816112ce565b81146112f457600080fd5b50565b600081359050611306816112e0565b92915050565b600060208284031215611322576113216112a4565b5b6000611330848285016112f7565b91505092915050565b6000819050919050565b61134c81611339565b811461135757600080fd5b50565b60008135905061136981611343565b92915050565b600060208284031215611385576113846112a4565b5b60006113938482850161135a565b91505092915050565b6113a5816112ce565b82525050565b60006020820190506113c0600083018461139c565b92915050565b6113cf81611339565b82525050565b60006020820190506113ea60008301846113c6565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611443826113fa565b810181811067ffffffffffffffff821117156114625761146161140b565b5b80604052505050565b600061147561129a565b9050611481828261143a565b919050565b600067ffffffffffffffff8211156114a1576114a061140b565b5b6114aa826113fa565b9050602081019050919050565b82818337600083830152505050565b60006114d96114d484611486565b61146b565b9050828152602081018484840111156114f5576114f46113f5565b5b6115008482856114b7565b509392505050565b600082601f83011261151d5761151c6113f0565b5b813561152d8482602086016114c6565b91505092915050565b6000806040838503121561154d5761154c6112a4565b5b600083013567ffffffffffffffff81111561156b5761156a6112a9565b5b61157785828601611508565b92505060206115888582860161135a565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115f85780820151818401526020810190506115dd565b60008484015250505050565b600061160f826115be565b61161981856115c9565b93506116298185602086016115da565b611632816113fa565b840191505092915050565b61164681611339565b82525050565b60008115159050919050565b6116618161164c565b82525050565b611670816112ce565b82525050565b600060c08301600083015184820360008601526116938282611604565b91505060208301516116a8602086018261163d565b5060408301516116bb6040860182611658565b5060608301516116ce6060860182611658565b5060808301516116e16080860182611658565b5060a08301516116f460a0860182611667565b508091505092915050565b600061170b8383611676565b905092915050565b6000602082019050919050565b600061172b82611592565b611735818561159d565b935083602082028501611747856115ae565b8060005b85811015611783578484038952815161176485826116ff565b945061176f83611713565b925060208a0199505060018101905061174b565b50829750879550505050505092915050565b600060208201905081810360008301526117af8184611720565b905092915050565b600082825260208201905092915050565b60006117d3826115be565b6117dd81856117b7565b93506117ed8185602086016115da565b6117f6816113fa565b840191505092915050565b61180a8161164c565b82525050565b600060c082019050818103600083015261182a81896117c8565b905061183960208301886113c6565b6118466040830187611801565b6118536060830186611801565b6118606080830185611801565b61186d60a083018461139c565b979650505050505050565b7f4e6f742061207665726966696564206964656e74697479000000000000000000600082015250565b60006118ae6017836117b7565b91506118b982611878565b602082019050919050565b600060208201905081810360008301526118dd816118a1565b9050919050565b7f4964656e74697479206e6f742076616c696420666f72207265766f636174696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006119406021836117b7565b915061194b826118e4565b604082019050919050565b6000602082019050818103600083015261196f81611933565b9050919050565b7f4964656e7469747920646f6573206e6f74206578697374000000000000000000600082015250565b60006119ac6017836117b7565b91506119b782611976565b602082019050919050565b600060208201905081810360008301526119db8161199f565b9050919050565b7f4e616d652063616e6e6f7420626520656d707479000000000000000000000000600082015250565b6000611a186014836117b7565b9150611a23826119e2565b602082019050919050565b60006020820190508181036000830152611a4781611a0b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a9557607f821691505b602082108103611aa857611aa7611a4e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611b107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ad3565b611b1a8683611ad3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611b57611b52611b4d84611339565b611b32565b611339565b9050919050565b6000819050919050565b611b7183611b3c565b611b85611b7d82611b5e565b848454611ae0565b825550505050565b600090565b611b9a611b8d565b611ba5818484611b68565b505050565b5b81811015611bc957611bbe600082611b92565b600181019050611bab565b5050565b601f821115611c0e57611bdf81611aae565b611be884611ac3565b81016020851015611bf7578190505b611c0b611c0385611ac3565b830182611baa565b50505b505050565b600082821c905092915050565b6000611c3160001984600802611c13565b1980831691505092915050565b6000611c4a8383611c20565b9150826002028217905092915050565b611c63826115be565b67ffffffffffffffff811115611c7c57611c7b61140b565b5b611c868254611a7d565b611c91828285611bcd565b600060209050601f831160018114611cc45760008415611cb2578287015190505b611cbc8582611c3e565b865550611d24565b601f198416611cd286611aae565b60005b82811015611cfa57848901518255600182019150602085019450602081019050611cd5565b86831015611d175784890151611d13601f891682611c20565b8355505b6001600288020188555050505b505050505050565b60006040820190508181036000830152611d4681856117c8565b9050611d5560208301846113c6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d9682611339565b9150611da183611339565b9250828203905081811115611db957611db8611d5c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611df982611339565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e2b57611e2a611d5c565b5b600182019050919050565b7f4964656e74697479206e6f742076616c696420666f722064656c6574696f6e00600082015250565b6000611e6c601f836117b7565b9150611e7782611e36565b602082019050919050565b60006020820190508181036000830152611e9b81611e5f565b9050919050565b7f4964656e74697479206e6f7420666f756e640000000000000000000000000000600082015250565b6000611ed86012836117b7565b9150611ee382611ea2565b602082019050919050565b60006020820190508181036000830152611f0781611ecb565b9050919050565b6000611f1982611339565b915060008203611f2c57611f2b611d5c565b5b600182039050919050565b7f4964656e7469747920616c726561647920657869737473000000000000000000600082015250565b6000611f6d6017836117b7565b9150611f7882611f37565b602082019050919050565b60006020820190508181036000830152611f9c81611f60565b9050919050565b6000611fae82611339565b9150611fb983611339565b9250828201905080821115611fd157611fd0611d5c565b5b92915050565b7f4964656e7469747920616c726561647920766572696669656400000000000000600082015250565b600061200d6019836117b7565b915061201882611fd7565b602082019050919050565b6000602082019050818103600083015261203c81612000565b905091905056fea26469706673582212209f14048c9efa9ac8aa0bb768800e2123e5e622c6ec4439443a1d9009165cf7ba64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createIdentity(string,uint256)": {
        "details": "Function to create a new identity",
        "params": {
          "age": "The age of the identity",
          "name": "The name of the identity"
        }
      },
      "deleteIdentity()": {
        "details": "Function to delete an identity"
      },
      "getAllIdentities()": {
        "details": "Function to get details of all identities",
        "returns": {
          "_0": "An array of Identity structs representing all identities"
        }
      },
      "revokeIdentity(address)": {
        "details": "Function to revoke an identity"
      },
      "updateIdentity(string,uint256)": {
        "details": "Function to update an identity",
        "params": {
          "newAge": "The new age of the identity",
          "newName": "The new name of the identity"
        }
      },
      "verifyIdentity()": {
        "details": "Function to verify an identity"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 19,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "identities",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Identity)14_storage)"
      },
      {
        "astId": 23,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "identitiesByIndex",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 25,
        "contract": "contracts/Did.sol:DecentralizedIdentity",
        "label": "identityCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Identity)14_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DecentralizedIdentity.Identity)",
        "numberOfBytes": "32",
        "value": "t_struct(Identity)14_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Identity)14_storage": {
        "encoding": "inplace",
        "label": "struct DecentralizedIdentity.Identity",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "age",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "exists",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 9,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "verified",
            "offset": 1,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 11,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "revoked",
            "offset": 2,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 13,
            "contract": "contracts/Did.sol:DecentralizedIdentity",
            "label": "owner",
            "offset": 3,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}